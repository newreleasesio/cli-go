project_name: newreleases

builds:
  - main: ./newreleases/main.go

    binary: newreleases

    flags:
      - -v
      - -trimpath

    ldflags:
      - -s -w -X newreleases.io/cmd.version={{.Version}}

    env:
      - CGO_ENABLED=0

    goos:
      - darwin
      - linux
      - windows

    goarch:
      - amd64
      - "386"
      - arm64
      - arm

    ignore:
      - goos: darwin
        goarch: "386"
      - goos: darwin
        goarch: arm
      - goos: windows
        goarch: arm64

archives:
  - name_template: "{{ tolower .ProjectName }}-{{ tolower .Os }}-{{ tolower .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

    format: binary

nfpms:
  - file_name_template: "{{ tolower .ProjectName }}-{{ tolower .Os }}-{{ tolower .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

    vendor: NewReleases
    homepage: https://newreleases.io/

    maintainer: Janoš Guljaš <janos@newreleases.io>

    description: NewReleases command line client.

    license: BSD

    formats:
      - deb
      - rpm

    bindir: /usr/bin

brews:
  -
    name: newreleases

    commit_author:
      name: NewReleases Team
      email: support@newreleases.io

    caveats: |
      # Configuration

      This tool needs to authenticate to NewReleases API using a secret Auth Key
      that can be generated on the service settings web page
      https://newreleases.io/settings/api-keys.

      The key can be stored permanently by issuing interactive commands:

      newreleases configure

      or

      newreleases get-auth-key

      or it can be provided as the command line argument flag `--auth-key` on
      every newreleases command execution.

      # Usage

      Refer to the complete list of all commands on the project's README on
      https://github.com/newreleasesio/cli-go.

    homepage: "https://github.com/newreleasesio/cli-go"
    description: "A command line client for managing NewReleases projects."

    license: "BSD-3-Clause"

    test: |
      system "#{bin}/newreleases version"

    repository:
      owner: newreleasesio
      name: homebrew-cmd
      token: "{{ .Env.HOMEBREW_CMD_TAP_TOKEN }}"
